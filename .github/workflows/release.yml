name: Release

on:
  push:
    tags:
      - 'v*'

env:
  PHP_VERSION: '8.1'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, xml, curl, json, pdo, pdo_mysql, redis

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Run PHPUnit tests
      run: composer run test

    - name: Prepare production build
      run: |
        # Remove development files and optimize autoloader
        composer dump-autoload --optimize --no-dev
        # Remove unnecessary files for production
        rm -rf tests/ vendor/bin/ .github/ docs/

    - name: Generate changelog
      run: |
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" > RELEASE_CHANGELOG.md

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: RELEASE_CHANGELOG.md
        draft: false
        prerelease: false

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
