<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_models.proto

namespace Livekit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>livekit.Pagination</code>
 */
class Pagination extends \Google\Protobuf\Internal\Message
{
    /**
     * list entities which IDs are greater
     *
     * Generated from protobuf field <code>string after_id = 1;</code>
     */
    protected $after_id = '';
    /**
     * Generated from protobuf field <code>int32 limit = 2;</code>
     */
    protected $limit = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $after_id
     *           list entities which IDs are greater
     *     @type int $limit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LivekitModels::initOnce();
        parent::__construct($data);
    }

    /**
     * list entities which IDs are greater
     *
     * Generated from protobuf field <code>string after_id = 1;</code>
     * @return string
     */
    public function getAfterId()
    {
        return $this->after_id;
    }

    /**
     * list entities which IDs are greater
     *
     * Generated from protobuf field <code>string after_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAfterId($var)
    {
        GPBUtil::checkString($var, True);
        $this->after_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 limit = 2;</code>
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * Generated from protobuf field <code>int32 limit = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkInt32($var);
        $this->limit = $var;

        return $this;
    }

}

